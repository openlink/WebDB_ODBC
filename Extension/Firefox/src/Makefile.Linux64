CXX   = c++
CPPFLAGS +=     -Os -Wall -Wno-non-virtual-dtor \
		-fno-rtti -fno-exceptions -fno-strict-aliasing \
                -freorder-blocks -fno-reorder-functions  \
                -fvisibility=hidden -fomit-frame-pointer \
		-shared -fPIC -pthread 
 
# Change this to point at your Gecko SDK directory.     h
GECKO_SDK_PATH = /home/sergei/_Moz/XPI5/x86_64/xulrunner-sdk
 
# GCC only define which allows us to not have to #include mozilla-config 
# in every .cpp file.  If your not using GCC remove this line and add 
# #include "mozilla-config.h" to each of your .cpp files. 
GECKO_CONFIG_INCLUDE = -include xpcom-config.h -include mozilla-config.h
 
GECKO_DEFINES  = -DXP_UNIX -DNDEBUG -DTRIMMED -DWITH_PTHREADS -D_REENTRANT
 
GECKO_INCLUDES = -I $(GECKO_SDK_PATH)/include -I /usr/local/iODBC/include -I ./inc -I .
 
GECKO_LDFLAGS =	$(GECKO_SDK_PATH)/lib/libxpcomglue_s.a \
	-L $(GECKO_SDK_PATH)/lib -lxpcom -lplds4 -lplc4 -lnspr4 -lmozalloc \
	-lpthread -ldl -lm \
        -L /usr/local/iODBC/lib64 -liodbc -m64 \
        -Wl,-z,defs -Wl,--version-script -Wl,./Linux-defs



INCLUDE = nsIODBCStorageConnection.h nsIODBCStorageError.h \
    nsIODBCStoragePendingStatement.h nsIODBCStorageResultSet.h \
    nsIODBCStorageRow.h nsIODBCStorageService.h \
    nsIODBCStorageStatement.h nsIODBCStorageStatementCallback.h \
    nsIODBCStorageValueArray.h

XPT = nsIODBCStorageConnection.xpt nsIODBCStorageError.xpt \
    nsIODBCStoragePendingStatement.xpt nsIODBCStorageResultSet.xpt \
    nsIODBCStorageRow.xpt nsIODBCStorageService.xpt \
    nsIODBCStorageStatement.xpt nsIODBCStorageStatementCallback.xpt \
    nsIODBCStorageValueArray.xpt \
    nsISQLVoidCallback.xpt nsISQLTransactionCallback.xpt \
    nsISQLResultSetRowList.xpt nsISQLError.xpt \
    nsISQLStatementCallback.xpt nsISQLResultSetMetaData.xpt \
    nsISQLStatementErrorCallback.xpt nsIDatabaseCallback.xpt \
    nsISQLTransactionErrorCallback.xpt nsISQLTransaction.xpt \
    nsISQLException.xpt nsIWorkerUtilsDatabase.xpt \
    nsISQLTransactionSync.xpt nsISQLTransactionSyncCallback.xpt \
    nsIDatabase.xpt nsISQLResultSet.xpt nsIDatabaseSync.xpt \
    nsISQLParameterArray.xpt

CINCLUDE := \
    $(INCLUDE:%.h=inc/%.h)

CXPT := \
    $(XPT:%.xpt=out64/%.xpt)


FILES = nsODBCUtils.cpp \
	nsODBCStorageEvents.cpp \
	nsODBCmodule.cpp \
	nsODBCStorageService.cpp \
	nsODBCStorageConnection.cpp \
	nsODBCParam.cpp \
	nsODBCStorageStatement.cpp \
	nsODBCStorageError.cpp \
	nsODBCStorageResultSet.cpp \
	nsODBCStorageVariant.cpp \
	nsODBCStorageRow.cpp


TARGET = ./out64/openlink_odbc.so


inc/%.h: IDL_MOZ/%.idl
	$(GECKO_SDK_PATH)/bin/xpidl -m header -e $@ -I$(GECKO_SDK_PATH)/idl -I./IDL_MOZ $?

out64/%.xpt: IDL_HTML5/%.idl
	$(GECKO_SDK_PATH)/bin/xpidl -m typelib -e $@ -I$(GECKO_SDK_PATH)/idl -I./IDL_HTML5 $?

out64/%.xpt: IDL_MOZ/%.idl
	$(GECKO_SDK_PATH)/bin/xpidl -m typelib -e $@ -I$(GECKO_SDK_PATH)/idl -I./IDL_MOZ $?




build:  $(CINCLUDE) $(CXPT)
	$(CXX) -o $(TARGET) $(GECKO_CONFIG_INCLUDE) $(GECKO_DEFINES) $(GECKO_INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(FILES) $(GECKO_LDFLAGS) 
	chmod +x $(TARGET)
	strip $(TARGET)

clean: 
	rm $(TARGET)
